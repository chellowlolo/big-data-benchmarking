query_id,database,category,name,query_template
1,Oracle Database,Aggregate,COUNT *,SELECT COUNT(*) FROM {table}
2,Oracle Database,Aggregate,COUNT,SELECT COUNT({numeric_column}) FROM {table}
3,Oracle Database,Aggregate,COUNT DISTINCT,SELECT COUNT(DISTINCT {numeric_column}) FROM {table}
4,Oracle Database,Aggregate,SUM,SELECT SUM({numeric_column}) FROM {table}
5,Oracle Database,Aggregate,SUM DISTINCT,SELECT SUM(DISTINCT {numeric_column}) FROM {table}
6,Oracle Database,Aggregate,AVG,SELECT AVG({numeric_column}) FROM {table}
7,Oracle Database,Aggregate,AVG DISTINCT,SELECT AVG(DISTINCT {numeric_column}) FROM {table}
8,Oracle Database,Aggregate,MIN,SELECT MIN({numeric_column}) FROM {table}
9,Oracle Database,Aggregate,MAX,SELECT MAX({numeric_column}) FROM {table}
10,Oracle Database,Aggregate,GROUP BY,"SELECT * FROM (SELECT COUNT({numeric_column}), {numeric_column} FROM {table} GROUP BY {numeric_column}) WHERE ROWNUM <= {row}"
11,Oracle Database,Analytic,COUNT rows,SELECT COUNT(*) FROM {table}
12,Oracle Database,Analytic,n rows,SELECT {columns} FROM {table} WHERE ROWNUM <= {row}
13,Oracle Database,Analytic,"n rows, ascending order",SELECT {columns} FROM {table} WHERE ROWNUM <= {row} ORDER BY {order_column} ASC
14,Oracle Database,Analytic,"n rows, descending order",SELECT {columns} FROM {table} WHERE ROWNUM <= {row} ORDER BY {order_column} DESC
15,Oracle Database,Analytic,DENSE_RANK,"SELECT {columns}, {numeric_column}, DENSE_RANK() OVER (PARTITION BY {numeric_column} ORDER BY {order_column}) FROM {table} WHERE ROWNUM <= {row}"
16,Oracle Database,Analytic,RANK and DENSE_RANK,"SELECT {columns}, {numeric_column}, {order_column}, RANK() OVER (PARTITION BY {numeric_column} ORDER BY {order_column} DESC) AS RANK, DENSE_RANK() OVER (PARTITION BY {numeric_column} ORDER BY {order_column}) AS DENSE_RANK FROM {table} WHERE ROWNUM <= {row}"
17,Oracle Database,Pattern,starts with characters,SELECT {column} FROM {table} WHERE {column} LIKE 'S%' AND ROWNUM <= {row}
18,Oracle Database,Pattern,containing characters,SELECT {column} FROM {table} WHERE {column} LIKE '%s%' AND ROWNUM <= {row}
19,Oracle Database,Pattern,containing characters,"SELECT {column} FROM {table} WHERE REGEXP_LIKE ({column}, '(v|ph|f)') AND ROWNUM <= {row}"
20,Oracle Database,Pattern,containing double vowels,"SELECT {column} FROM {table} WHERE REGEXP_LIKE ({column}, '([aeiou])\1', 'i') AND ROWNUM <= {row}"
21,Oracle Database,Union,UNION,SELECT {columns} FROM {table} WHERE ROWNUM <= ({row}/2) UNION SELECT {columns} FROM {table} WHERE ROWNUM <= ({row}/2)
22,Oracle Database,Union,UNION,SELECT {columns} FROM {table} WHERE ROWNUM <= ({row}/2) UNION SELECT {columns} FROM {table} WHERE ROWNUM <= ({row}/2)
23,Oracle Database,Union,UNION ALL,SELECT {columns} FROM {table} WHERE ROWNUM <= ({row}/2) UNION ALL SELECT {columns} FROM {table} WHERE ROWNUM <= ({row}/2)
24,Oracle Database,Subquery,EXISTS,SELECT {column_1} FROM {table} WHERE EXISTS (SELECT {column_1} FROM {table} WHERE {column_1} IS NOT NULL) AND ROWNUM <= {row}
25,Oracle Database,Subquery,below average,SELECT {numeric_column} FROM {table} WHERE {numeric_column} <= (SELECT AVG({numeric_column}) FROM {table}) AND ROWNUM <= {row}
26,Oracle Database,Subquery,above average,SELECT {numeric_column} FROM {table} WHERE {numeric_column} >= (SELECT AVG({numeric_column}) FROM {table}) AND ROWNUM <= {row}
27,Oracle Database,Join,self JOIN,"SELECT table1.{column_1}, table1.{column_2} FROM {table} table1, {table} table2 WHERE table1.{column_1} = table2.{column_1} AND table1.{column_2} <> table2.{column_2} AND ROWNUM <= {row} ORDER BY table1.{column_1}"
28,Oracle Database,Join,LEFT JOIN,"SELECT table1.{column_1}, table1.{column_2} FROM {table} table1 LEFT JOIN {table} table2 ON table1.{column_1} = table2.{column_1} WHERE table1.{column_2} <> table2.{column_2} AND ROWNUM <= {row}"
29,Oracle Database,Join,RIGHT JOIN,"SELECT table1.{column_1}, table1.{column_2} FROM {table} table1 RIGHT JOIN {table} table2 ON table1.{column_1} = table2.{column_1} WHERE table1.{column_2} <> table2.{column_2} AND ROWNUM <= {row}"
30,Oracle Database,Join,FULL JOIN,"SELECT table1.{column_1}, table1.{column_2} FROM {table} table1 FULL JOIN {table} table2 ON table1.{column_1} = table2.{column_1} WHERE table1.{column_2} <> table2.{column_2} AND ROWNUM <= {row}"
1,HANA,Aggregate,COUNT *,SELECT COUNT(*) FROM {table}
2,HANA,Aggregate,COUNT,SELECT COUNT({numeric_column}) FROM {table}
3,HANA,Aggregate,COUNT DISTINCT,SELECT COUNT(DISTINCT {numeric_column}) FROM {table}
4,HANA,Aggregate,SUM,SELECT SUM(CAST({numeric_column} AS BIGINT)) FROM {table}
5,HANA,Aggregate,SUM DISTINCT,SELECT SUM(DISTINCT CAST({numeric_column} AS BIGINT)) FROM {table}
6,HANA,Aggregate,AVG,SELECT AVG(CAST({numeric_column} AS BIGINT)) FROM {table}
7,HANA,Aggregate,AVG DISTINCT,SELECT AVG(DISTINCT CAST({numeric_column} AS BIGINT)) FROM {table}
8,HANA,Aggregate,MIN,SELECT MIN({numeric_column}) FROM {table}
9,HANA,Aggregate,MAX,SELECT MAX({numeric_column}) FROM {table}
10,HANA,Aggregate,GROUP BY,"SELECT TOP {row} * FROM (SELECT COUNT({numeric_column}), {numeric_column} FROM {table} GROUP BY {numeric_column})"
11,HANA,Analytic,COUNT rows,SELECT COUNT(*) FROM {table}
12,HANA,Analytic,n rows,SELECT TOP {row} {columns} FROM {table}
13,HANA,Analytic,"n rows, ascending order",SELECT TOP {row} {columns} FROM {table} ORDER BY {order_column} ASC
14,HANA,Analytic,"n rows, descending order",SELECT TOP {row} {columns} FROM {table} ORDER BY {order_column} DESC
15,HANA,Analytic,DENSE_RANK,"SELECT TOP {row} {columns}, {numeric_column}, DENSE_RANK() OVER (PARTITION BY {numeric_column} ORDER BY {order_column}) FROM {table}"
16,HANA,Analytic,RANK and DENSE_RANK,"SELECT TOP {row} {columns}, {numeric_column}, {order_column}, RANK() OVER (PARTITION BY {numeric_column} ORDER BY {order_column} DESC) AS RANK, DENSE_RANK() OVER (PARTITION BY {numeric_column} ORDER BY {order_column}) AS DENSE_RANK FROM {table}"
17,HANA,Pattern,starts with characters,SELECT TOP {row} {column} FROM {table} WHERE {column} LIKE 'S%'
18,HANA,Pattern,containing characters,SELECT TOP {row} {column} FROM {table} WHERE {column} LIKE '%s%'
19,HANA,Pattern,containing characters,SELECT TOP {row} {column} FROM {table} WHERE {column} LIKE_REGEXPR '(v|ph|f)'
20,HANA,Pattern,containing double vowels,SELECT TOP {row} {column} FROM {table} WHERE {column} LIKE_REGEXPR '([aeiou])\1'
21,HANA,Union,UNION,SELECT TOP {row} {columns} FROM {table} UNION SELECT TOP {row} {columns} FROM {table}
22,HANA,Union,UNION,SELECT TOP {row} {columns} FROM {table} UNION SELECT TOP {row} {columns} FROM {table}
23,HANA,Union,UNION ALL,SELECT TOP {row} {columns} FROM {table} UNION ALL SELECT TOP {row} {columns} FROM {table}
24,HANA,Subquery,EXISTS,SELECT TOP {row} {column_1} FROM {table} WHERE EXISTS (SELECT {column_1} FROM {table} WHERE {column_1} IS NOT NULL)
25,HANA,Subquery,below average,SELECT TOP {row} {numeric_column} FROM {table} WHERE {numeric_column} <= (SELECT AVG(CAST({numeric_column} AS BIGINT)) FROM {table})
26,HANA,Subquery,above average,SELECT TOP {row} {numeric_column} FROM {table} WHERE {numeric_column} >= (SELECT AVG(CAST({numeric_column} AS BIGINT)) FROM {table})
27,HANA,Join,self JOIN,"SELECT TOP {row} table1.{column_1}, table1.{column_2} FROM {table} table1 JOIN {table} table2 WHERE table1.{column_1} = table2.{column_1} AND table1.{column_2} <> table2.{column_2} ORDER BY table1.{column_1}"
28,HANA,Join,LEFT JOIN,"SELECT TOP {row} table1.{column_1}, table1.{column_2} FROM {table} table1 LEFT JOIN {table} table2 ON table1.{column_1} = table2.{column_1} WHERE table1.{column_2} <> table2.{column_2}"
29,HANA,Join,RIGHT JOIN,"SELECT TOP {row} table1.{column_1}, table1.{column_2} FROM {table} table1 RIGHT JOIN {table} table2 ON table1.{column_1} = table2.{column_1} WHERE table1.{column_2} <> table2.{column_2}"
30,HANA,Join,FULL JOIN,"SELECT TOP {row} table1.{column_1}, table1.{column_2} FROM {table} table1 FULL JOIN {table} table2 ON table1.{column_1} = table2.{column_1} WHERE table1.{column_2} <> table2.{column_2}"
1,Oracle Database In-Memory,Aggregate,COUNT *,SELECT COUNT(*) FROM {table}
2,Oracle Database In-Memory,Aggregate,COUNT,SELECT COUNT({numeric_column}) FROM {table}
3,Oracle Database In-Memory,Aggregate,COUNT DISTINCT,SELECT COUNT(DISTINCT {numeric_column}) FROM {table}
4,Oracle Database In-Memory,Aggregate,SUM,SELECT SUM({numeric_column}) FROM {table}
5,Oracle Database In-Memory,Aggregate,SUM DISTINCT,SELECT SUM(DISTINCT {numeric_column}) FROM {table}
6,Oracle Database In-Memory,Aggregate,AVG,SELECT AVG({numeric_column}) FROM {table}
7,Oracle Database In-Memory,Aggregate,AVG DISTINCT,SELECT AVG(DISTINCT {numeric_column}) FROM {table}
8,Oracle Database In-Memory,Aggregate,MIN,SELECT MIN({numeric_column}) FROM {table}
9,Oracle Database In-Memory,Aggregate,MAX,SELECT MAX({numeric_column}) FROM {table}
10,Oracle Database In-Memory,Aggregate,GROUP BY,"SELECT * FROM (SELECT COUNT({numeric_column}), {numeric_column} FROM {table} GROUP BY {numeric_column}) WHERE ROWNUM <= {row}"
11,Oracle Database In-Memory,Analytic,COUNT rows,SELECT COUNT(*) FROM {table}
12,Oracle Database In-Memory,Analytic,n rows,SELECT {columns} FROM {table} WHERE ROWNUM <= {row}
13,Oracle Database In-Memory,Analytic,"n rows, ascending order",SELECT {columns} FROM {table} WHERE ROWNUM <= {row} ORDER BY {order_column} ASC
14,Oracle Database In-Memory,Analytic,"n rows, descending order",SELECT {columns} FROM {table} WHERE ROWNUM <= {row} ORDER BY {order_column} DESC
15,Oracle Database In-Memory,Analytic,DENSE_RANK,"SELECT {columns}, {numeric_column}, DENSE_RANK() OVER (PARTITION BY {numeric_column} ORDER BY {order_column}) FROM {table} WHERE ROWNUM <= {row}"
16,Oracle Database In-Memory,Analytic,RANK and DENSE_RANK,"SELECT {columns}, {numeric_column}, {order_column}, RANK() OVER (PARTITION BY {numeric_column} ORDER BY {order_column} DESC) AS RANK, DENSE_RANK() OVER (PARTITION BY {numeric_column} ORDER BY {order_column}) AS DENSE_RANK FROM {table} WHERE ROWNUM <= {row}"
17,Oracle Database In-Memory,Pattern,starts with characters,SELECT {column} FROM {table} WHERE {column} LIKE 'S%' AND ROWNUM <= {row}
18,Oracle Database In-Memory,Pattern,containing characters,SELECT {column} FROM {table} WHERE {column} LIKE '%s%' AND ROWNUM <= {row}
19,Oracle Database In-Memory,Pattern,containing characters,"SELECT {column} FROM {table} WHERE REGEXP_LIKE ({column}, '(v|ph|f)') AND ROWNUM <= {row}"
20,Oracle Database In-Memory,Pattern,containing double vowels,"SELECT {column} FROM {table} WHERE REGEXP_LIKE ({column}, '([aeiou])\1', 'i') AND ROWNUM <= {row}"
21,Oracle Database In-Memory,Union,UNION,SELECT {columns} FROM {table} WHERE ROWNUM <= ({row}/2) UNION SELECT {columns} FROM {table} WHERE ROWNUM <= ({row}/2)
22,Oracle Database In-Memory,Union,UNION,SELECT {columns} FROM {table} WHERE ROWNUM <= ({row}/2) UNION SELECT {columns} FROM {table} WHERE ROWNUM <= ({row}/2)
23,Oracle Database In-Memory,Union,UNION ALL,SELECT {columns} FROM {table} WHERE ROWNUM <= ({row}/2) UNION ALL SELECT {columns} FROM {table} WHERE ROWNUM <= ({row}/2)
24,Oracle Database In-Memory,Subquery,EXISTS,SELECT {column_1} FROM {table} WHERE EXISTS (SELECT {column_1} FROM {table} WHERE {column_1} IS NOT NULL) AND ROWNUM <= {row}
25,Oracle Database In-Memory,Subquery,below average,SELECT {numeric_column} FROM {table} WHERE {numeric_column} <= (SELECT AVG({numeric_column}) FROM {table}) AND ROWNUM <= {row}
26,Oracle Database In-Memory,Subquery,above average,SELECT {numeric_column} FROM {table} WHERE {numeric_column} >= (SELECT AVG({numeric_column}) FROM {table}) AND ROWNUM <= {row}
27,Oracle Database In-Memory,Join,self JOIN,"SELECT table1.{column_1}, table1.{column_2} FROM {table} table1, {table} table2 WHERE table1.{column_1} = table2.{column_1} AND table1.{column_2} <> table2.{column_2} AND ROWNUM <= {row} ORDER BY table1.{column_1}"
28,Oracle Database In-Memory,Join,LEFT JOIN,"SELECT table1.{column_1}, table1.{column_2} FROM {table} table1 LEFT JOIN {table} table2 ON table1.{column_1} = table2.{column_1} WHERE table1.{column_2} <> table2.{column_2} AND ROWNUM <= {row}"
29,Oracle Database In-Memory,Join,RIGHT JOIN,"SELECT table1.{column_1}, table1.{column_2} FROM {table} table1 RIGHT JOIN {table} table2 ON table1.{column_1} = table2.{column_1} WHERE table1.{column_2} <> table2.{column_2} AND ROWNUM <= {row}"
30,Oracle Database In-Memory,Join,FULL JOIN,"SELECT table1.{column_1}, table1.{column_2} FROM {table} table1 FULL JOIN {table} table2 ON table1.{column_1} = table2.{column_1} WHERE table1.{column_2} <> table2.{column_2} AND ROWNUM <= {row}"
1,SQL Server,Aggregate,COUNT *,SELECT COUNT(*) FROM {table}
2,SQL Server,Aggregate,COUNT,SELECT COUNT({numeric_column}) FROM {table}
3,SQL Server,Aggregate,COUNT DISTINCT,SELECT COUNT(DISTINCT {numeric_column}) FROM {table}
4,SQL Server,Aggregate,SUM,SELECT SUM(CAST({numeric_column} AS BIGINT)) FROM {table}
5,SQL Server,Aggregate,SUM DISTINCT,SELECT SUM(DISTINCT CAST({numeric_column} AS BIGINT)) FROM {table}
6,SQL Server,Aggregate,AVG,SELECT AVG(CAST({numeric_column} AS BIGINT)) FROM {table}
7,SQL Server,Aggregate,AVG DISTINCT,SELECT AVG(DISTINCT CAST({numeric_column} AS BIGINT)) FROM {table}
8,SQL Server,Aggregate,MIN,SELECT MIN({numeric_column}) FROM {table}
9,SQL Server,Aggregate,MAX,SELECT MAX({numeric_column}) FROM {table}
10,SQL Server,Aggregate,GROUP BY,"SELECT TOP {row} * FROM (SELECT COUNT({numeric_column}), {numeric_column} FROM {table} GROUP BY {numeric_column})"
11,SQL Server,Analytic,COUNT rows,SELECT COUNT(*) FROM {table}
12,SQL Server,Analytic,n rows,SELECT TOP {row} {columns} FROM {table}
13,SQL Server,Analytic,"n rows, ascending order",SELECT TOP {row} {columns} FROM {table} ORDER BY {order_column} ASC
14,SQL Server,Analytic,"n rows, descending order",SELECT TOP {row} {columns} FROM {table} ORDER BY {order_column} DESC
15,SQL Server,Analytic,DENSE_RANK,"SELECT TOP {row} {columns}, {numeric_column}, DENSE_RANK() OVER (PARTITION BY {numeric_column} ORDER BY {order_column}) FROM {table}"
16,SQL Server,Analytic,RANK and DENSE_RANK,"SELECT TOP {row} {columns}, {numeric_column}, {order_column}, RANK() OVER (PARTITION BY {numeric_column} ORDER BY {order_column} DESC) AS RANK, DENSE_RANK() OVER (PARTITION BY {numeric_column} ORDER BY {order_column}) AS DENSE_RANK FROM {table}"
17,SQL Server,Pattern,starts with characters,SELECT TOP {row} {column} FROM {table} WHERE {column} LIKE 'S%'
18,SQL Server,Pattern,containing characters,SELECT TOP {row} {column} FROM {table} WHERE {column} LIKE '%s%'
19,SQL Server,Pattern,containing characters,SELECT TOP {row} {column} FROM {table} WHERE {column} LIKE_REGEXPR '(v|ph|f)'
20,SQL Server,Pattern,containing double vowels,SELECT TOP {row} {column} FROM {table} WHERE {column} LIKE_REGEXPR '([aeiou])\1'
21,SQL Server,Union,UNION,SELECT TOP {row} {columns} FROM {table} UNION SELECT TOP {row} {columns} FROM {table}
22,SQL Server,Union,UNION,SELECT TOP {row} {columns} FROM {table} UNION SELECT TOP {row} {columns} FROM {table}
23,SQL Server,Union,UNION ALL,SELECT TOP {row} {columns} FROM {table} UNION ALL SELECT TOP {row} {columns} FROM {table}
24,SQL Server,Subquery,EXISTS,SELECT TOP {row} {column_1} FROM {table} WHERE EXISTS (SELECT {column_1} FROM {table} WHERE {column_1} IS NOT NULL)
25,SQL Server,Subquery,below average,SELECT TOP {row} {numeric_column} FROM {table} WHERE {numeric_column} <= (SELECT AVG(CAST({numeric_column} AS BIGINT)) FROM {table})
26,SQL Server,Subquery,above average,SELECT TOP {row} {numeric_column} FROM {table} WHERE {numeric_column} >= (SELECT AVG(CAST({numeric_column} AS BIGINT)) FROM {table})
27,SQL Server,Join,self JOIN,"SELECT TOP {row} table1.{column_1}, table1.{column_2} FROM {table} table1 JOIN {table} table2 WHERE table1.{column_1} = table2.{column_1} AND table1.{column_2} <> table2.{column_2} ORDER BY table1.{column_1}"
28,SQL Server,Join,LEFT JOIN,"SELECT TOP {row} table1.{column_1}, table1.{column_2} FROM {table} table1 LEFT JOIN {table} table2 ON table1.{column_1} = table2.{column_1} WHERE table1.{column_2} <> table2.{column_2}"
29,SQL Server,Join,RIGHT JOIN,"SELECT TOP {row} table1.{column_1}, table1.{column_2} FROM {table} table1 RIGHT JOIN {table} table2 ON table1.{column_1} = table2.{column_1} WHERE table1.{column_2} <> table2.{column_2}"
30,SQL Server,Join,FULL JOIN,"SELECT TOP {row} table1.{column_1}, table1.{column_2} FROM {table} table1 FULL JOIN {table} table2 ON table1.{column_1} = table2.{column_1} WHERE table1.{column_2} <> table2.{column_2}"
